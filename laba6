Main.cpp
#include "student.h"

int main() {
Student group;
int choice;

do {
std::cout << "\nМеню:\n";
std::cout << "1. Додати студента\n2. Показати студентів\n3. Оновити оцінку\n0. Вийти\nВаш вибір: ";
std::cin >> choice;

switch (choice) {
case 1:
group.inputStudent();
break;

case 2:
group.printStudents();
break;

case 3: {
int id, grade;
std::cout << "Введіть ID студента: ";
std::cin >> id;
std::cout << "Введіть нову оцінку: ";

std::cin >> grade;

group.updateGrade(id, grade);

break;

}

case 0:

std::cout << "Вихід з програми...\n";

break;

default:

std::cout << "Некоректний вибір!\n";

}

} while (choice != 0);



return 0;

}

Student.cpp


#include "student.h"

void Student::inputStudent() {

if (count >= SIZE) {

std::cout << "Досягнуто максимальну кількість студентів!\n";
return;

}

student_s_t s;

std::cout << "Введіть ID: ";

std::cin >> s.id;

std::cout << "Введіть ім'я: ";

std::cin.ignore();

std::getline(std::cin, s.name);



// Перевірка курсу

std::cout << "Введіть курс (1-4): ";

std::cin >> s.course;

if (s.course < 1 || s.course > 4) {

std::cout << "Некоректний курс! Курс має бути від 1 до 4.\n";

return;

}



// Перевірка оцінки

std::cout << "Введіть оцінку (0-100): ";

std::cin >> s.grade;

if (s.grade < 0 || s.grade > 100) {

std::cout << "Некоректна оцінка! Оцінка має бути в діапазоні 0-100.\n";

return;

}


students[count++] = s;

std::cout << "Студента успішно додано!\n";
}

void Student::printStudents() const {

for (size_t i = 0; i < count; i++) {

std::cout << "ID: " << students[i].id

<< ", Ім'я: " << students[i].name

<< ", Курс: " << students[i].course

<< ", Оцінка: " << students[i].grade << '\n';

}

}

void Student::updateGrade(int id, int newGrade) {
if (newGrade < 0 || newGrade > 100) {
std::cout << "Некоректна оцінка! Оцінка має бути в діапазоні 0-100.\n";
return;
}
for (size_t i = 0; i < count; i++) {
if (students[i].id == id) {
students[i].grade = newGrade;
std::cout << "Оцінка оновлена.\n";
return;
}
}
std::cout << "Студента з таким ID не знайдено!\n";

}


Student.h

#ifndef STUDENT_H
#define STUDENT_H

#include <array>
#include <string>
#include <iostream>

const size_t SIZE = 100;
struct student_s_t {
int id;
std::string name;
int course;
int grade;

};



class Student {

private:
std::array<student_s_t, SIZE> students;
size_t count;

public:
Student() : count(0) {}
void inputStudent();
void printStudents() const;
void updateGrade(int id, int newGrade);
};



#endif // STUDENT_H


